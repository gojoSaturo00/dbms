
CREATE TABLE Borrower (
    Roll_no INT PRIMARY KEY,
    Name VARCHAR(50),
    DateofIssue DATE,
    NameofBook VARCHAR(50),
    Status CHAR(30)
);

CREATE TABLE Fine (
    Roll_no INT,
    Date DATE,
    Amt DECIMAL(10, 2)
);

insert into Borrower (Roll_no, Name, DateofIssue, NameofBook, Status) values
(34, 'LK', ('2022-09-09'), 'ThirtyFour', 'p'),
(16, 'AJ',('2022-08-15'), 'Sixteen', 'p' ),
(14, 'AD',('2022-08-25'), 'Forteen', 'c' ),
(21, 'PW',('2022-08-30'), 'TwentyOne', 'c' ),
(12, 'SK',('2022-08-10'), 'Twelve', 'p' );
		
select * from Fine;

CALL CalculateFine(34, 'ThirtyFour');


DELIMITER //
CREATE PROCEDURE CalculateFine(IN in_roll_no INT, IN in_book_name VARCHAR(100))
BEGIN
    DECLARE v_date_of_issue DATE;
    DECLARE v_current_date DATE;
    DECLARE v_fine_amount INT;
    DECLARE v_status CHAR(1);
    
    SELECT DateofIssue, Status INTO v_date_of_issue, v_status
    FROM Borrower
    WHERE Roll_no = in_roll_no AND NameofBook = in_book_name;
    
    SET v_current_date = CURDATE();
    
    IF v_date_of_issue IS NULL THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Book not found for the given Roll_no and Name of Book';
    END IF;
    
    IF v_status = 'R' THEN
        SIGNAL SQLSTATE '45000'
        SET MESSAGE_TEXT = 'Book has already been returned.';
    END IF;
    
    IF DATEDIFF(v_current_date, v_date_of_issue) BETWEEN 15 AND 30 THEN
        SET v_fine_amount = 5 * DATEDIFF(v_current_date, v_date_of_issue);
    ELSEIF DATEDIFF(v_current_date, v_date_of_issue) > 30 THEN
        SET v_fine_amount = 50 * DATEDIFF(v_current_date, v_date_of_issue);
    ELSE
        SET v_fine_amount = 0;
    END IF;
    
    -- Update the status in the Borrower table
    UPDATE Borrower
    SET Status = 'R'
    WHERE Roll_no = in_roll_no AND NameofBook = in_book_name;
    
    -- Insert the fine details into the Fine table
    INSERT INTO Fine (Roll_no, Date, Amt)
    VALUES (in_roll_no, v_current_date, v_fine_amount);
    
    SELECT 'Fine calculated successfully' AS Message;
END //
DELIMITER ;
